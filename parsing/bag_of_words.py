import numpy as np
import sys
from ordered_set import OrderedSet


# konstruktor przyjmuje nazwe sparsowanego pliku, plik jest otwierany i tworzony jest zbior slow
class BagOfWords:
    def __init__(self, parsed_file_name):
        self.data = open('../text_files/' + parsed_file_name, 'r').read()
        word_set = set()
        lines = self.data.splitlines()
        for line in lines:
            word_set = word_set.union(line.split())
        self.word_set = OrderedSet(word_set)

    # Przyjmuje plik wejsciowy, dla ktorego ka≈ºdemu z rekordow zostaje utworzony wektor.
    # Wszystkie wektory dla pliku zapisywane sa w pliku wynikowym
    def get_binary_vectors(self, input_file_name):
        input_data = open('../text_files/' + input_file_name, 'r').read()
        output = open('../text_files/' + 'vector_result', 'w')
        lines = input_data.splitlines()
        result_list = np.ndarray((len(lines), len(self.word_set)), dtype=bool)
        for i, line in enumerate(lines):
            line = line.split()
            single_array = np.zeros((len(self.word_set),), dtype=bool)
            for n, word in enumerate(self.word_set):
                if self.word_set[n] in line:
                    single_array[n] = True
            result_list[i] = single_array
        np.set_printoptions(threshold=sys.maxsize)
        output.write(str(result_list))
        return result_list


# Test
a = BagOfWords('parsed_file.txt')
a.get_binary_vectors('dict2012-5.txt')
