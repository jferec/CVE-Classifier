def parse_line(line):
    """
    Parsuje linie. Usuwa nr rekordu w bazie danych i dzieli slowa zawierające '_' nie majace w nazwie cyfr.
    :param line: linia z pliku zrodlowego
    :return: sparsowana linia
    """
    line = line.split()
    for i, word in enumerate(line):
        if 'CVE-' in word:
            del line[i]
        if '_' in word and not has_number(word):
            line[i] = word.replace("_", " ")

    line = " ".join(line)
    return line


def parse_file(file_name):
    """
    Parsuje wszystkie linie pliku zrodlowego. Usuwany jest nr rekordu w bazie danych
    i sa dzielone slowa zawierające '_' nie majace w nazwie cyfr.
    :param file_name: nazwa pliku zrodlowego
    :return: zapisuje w oddzielnym pliku sparsowane dane
    """
    with open('../text_files/' + file_name, 'r') as input_file:
        file_content = input_file.read()
        lines = file_content.splitlines()
    with open('../text_files/' + 'parsed_file.txt', 'a') as output_file:
        for line in lines:
            line = parse_line(line)
            output_file.write(line.lower() + "\n")


# Sprawdza czy str zawiera cyfry
def has_number(input_string):
    return any(char.isdigit() for char in input_string)

